"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "makeModelsController", {
  enumerable: true,
  get: function () {
    return _ModelsController.default;
  }
});
Object.defineProperty(exports, "setupController", {
  enumerable: true,
  get: function () {
    return _RadiksController.default;
  }
});
Object.defineProperty(exports, "getDB", {
  enumerable: true,
  get: function () {
    return _mongodb.getDB;
  }
});
exports.setup = void 0;

var _ModelsController = _interopRequireDefault(require("./controllers/ModelsController"));

var _RadiksController = _interopRequireDefault(require("./controllers/RadiksController"));

var _mongodb = require("./database/mongodb");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const setup = async (config = {}) => {
  const db = await (0, _mongodb.getDB)(config.mongoDBUrl);

  const newConfig = _objectSpread2({}, config, {
    maxLimit: config.maxLimit ? config.maxLimit : 1000
  });

  const controller = (0, _RadiksController.default)(db, newConfig);
  return controller;
};

exports.setup = setup;